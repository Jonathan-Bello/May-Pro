---
type Props = {
  type: "primary" | "secondary";
  text: string;
  iconClass: string;
};

const { type, text, iconClass } = Astro.props;
---

<div class="bgBorder inline-block">
  <div
    class:list={[
      "parallelogramBtn inline-flex",
      {
        "bg-primary-4": type == "primary",
        "bg-grey-6": type == "secondary",
      },
    ]}
  >
    <span
      class:list={[
        "pl-4 pr-2 py-3 inline-block text-base font-semibold z-10",
        {
          "text-grey-6": type == "primary",
          "text-primary-4": type == "secondary",
        },
      ]}
    >
      {text}
    </span>
    <div
      class:list={[
        "parallelogram pl-4 pr-5 flex items-center justify-center",
        {
          "bg-grey-6": type == "primary",
          "bg-primary-4": type == "secondary",
        },
      ]}
    >
      <i
        class:list={[
          `${iconClass} text-2xl -rotate-[120deg]`,
          {
            "text-primary-4": type == "primary",
            "text-grey-6": type == "secondary",
          },
        ]}></i>
    </div>
  </div>
</div>

<style>
  .parallelogramBtn {
    position: relative;
    clip-path: polygon(0% 0%, 100% 0%, 95% 100%, 0% 100%);
    /* border: 4px solid blue; */
  }

  .bgBorder {
    filter: drop-shadow(1px 0px 0px #d82227) drop-shadow(-1px 0px 0px #d82227)
      drop-shadow(0px 1px 0px #d82227) drop-shadow(0px -1px 0px #d82227)
      drop-shadow(1px 1px 0px #d82227) drop-shadow(-1px -1px 0px #d82227)
      drop-shadow(-1px 1px 0px #d82227) drop-shadow(1px -1px 0px #d82227);
  }

  .parallelogram {
    /* margin: 0.15rem 0 0.15rem 0rem; */
    /* margin: 2px 4px; */
    z-index: 2;
    clip-path: polygon(25% 0%, 100% 0%, 100% 100%, 0% 100%);
  }
</style>
